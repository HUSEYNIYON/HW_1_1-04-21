// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuoteApp.DataContext;

namespace QuoteApp.Migrations
{
    [DbContext(typeof(QuoteDbContext))]
    [Migration("20210405073155_Seeding")]
    partial class Seeding
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("QuoteApp.Models.Quote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Quotes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Фаина Раневская",
                            InsertDate = new DateTime(2021, 4, 5, 0, 0, 0, 0, DateTimeKind.Local),
                            Text = "Всё сбудется, стоит только расхотеть."
                        },
                        new
                        {
                            Id = 2,
                            Author = "Людвиг Бёрне",
                            InsertDate = new DateTime(2021, 4, 5, 0, 0, 0, 0, DateTimeKind.Local),
                            Text = "Без многого может обходиться человек, но только не без человека."
                        },
                        new
                        {
                            Id = 3,
                            Author = "Ганс Христиан Андерсен.",
                            InsertDate = new DateTime(2021, 4, 5, 0, 0, 0, 0, DateTimeKind.Local),
                            Text = "Жизнь, как красивая мелодия, только песни перепутались."
                        },
                        new
                        {
                            Id = 4,
                            Author = "Люси Скетч",
                            InsertDate = new DateTime(2021, 4, 5, 0, 0, 0, 0, DateTimeKind.Local),
                            Text = "Они улыбаются, когда ты звонишь им, но у них нет времени позвонить тебе."
                        },
                        new
                        {
                            Id = 5,
                            Author = "Nich James",
                            InsertDate = new DateTime(2021, 4, 5, 0, 0, 0, 0, DateTimeKind.Local),
                            Text = "Желание добиться успеха без упорного труда, схоже с желанием снять урожай там, где вы не садили семена."
                        },
                        new
                        {
                            Id = 6,
                            Author = "Olga Komichkina.",
                            InsertDate = new DateTime(2021, 4, 5, 0, 0, 0, 0, DateTimeKind.Local),
                            Text = "Каждую минуту, когда вы злитесь на кого-то, вы теряете 60 секунд счастья, которые никогда не вернете."
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
